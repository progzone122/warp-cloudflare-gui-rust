import { HorizontalBox, Button } from "std-widgets.slint";
import { CustomComboBox } from "components/CustomComboBox.slint";

export component SettingsWindow inherits Window {
    in property <int> warp_mode_setting_index <=> warp_mode_setting.index;
    in property <[string]> warp_mode_setting_model: ["warp", "doh", "warp+doh", "dot", "warp+dot", "proxy", "tunnel_only"];

    in-out property <bool> account_register_enabled <=> account_register.enabled;
    in-out property <bool> account_delete_enabled <=> account_delete.enabled;

    in-out property <string> app_version;

    callback warp_mode_setting_choose <=> warp_mode_setting.choose;
    callback account_register_clicked;
    callback account_delete_clicked;

    width: 300px;
    height: 400px;
    background: black;
    title: "Settings";

    VerticalLayout {
        HorizontalBox {
            alignment: center;
            height: 40px;

            Text {
                text: "Settings";
                color: white;
                font-size: 20px;
            }
        }
        // Warp mode
        HorizontalBox {
            height: 40px;

            VerticalLayout {
                alignment: end;

                Text {
                    text: "WARP mode: ";
                    color: white;
                    font-size: 16px;
                }
            }
            VerticalLayout {
                alignment: center;

                warp_mode_setting := CustomComboBox {
                    model: warp_mode_setting_model;
                    index: 0;
                }
            }
        }
        // Account
        HorizontalBox {
            height: 40px;

            VerticalLayout {
                alignment: end;

                Text {
                    text: "Account: ";
                    color: white;
                    font-size: 16px;
                }
            }
            VerticalLayout {
                alignment: center;

                account_register := Button {
                    enabled: true;
                    text: "Register";
                    clicked => {
                        self.enabled = false;
                        account_delete.enabled = false;
                        // For reliability, we additionally check the state of the button =)
                        if (!self.enabled && !account_register.enabled) {
                            account_register_clicked();
                        }
                    }
                }
            }
            VerticalLayout {
                alignment: center;

                account_delete := Button {
                    enabled: true;
                    text: "Delete";
                    clicked => {
                        self.enabled = false;
                        account_register.enabled = false;
                        // For reliability, we additionally check the state of the button =)
                        if (!self.enabled && !account_register.enabled) {
                            account_delete_clicked();
                        }
                    }
                }
            }
        }
        // App info
        HorizontalBox {
            height: 40px;

            VerticalLayout {
                alignment: end;

                Text {
                    text: "Version: ";
                    color: white;
                    font-size: 16px;
                }
            }
            HorizontalLayout {
                alignment: end;

            VerticalLayout {
                alignment: center;

                Text {
                    text: app_version;
                    color: white;
                    font-size: 16px;
                    font-weight: 600;
                }
            }
            }
        }
    }
}